AWSTemplateFormatVersion: 2010-09-09
Description: hello stack
Parameters:
  DeploymentBucket:
    Type: String
Resources:
  HelloLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName: /aws/lambda/hello
  IamRoleLambdaExecution:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: hello-lambda
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                Resource:
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello:*
              - Effect: Allow
                Action:
                  - 'logs:PutLogEvents'
                Resource:
                  - !Sub >-
                    arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/hello:*:*
      Path: /
      RoleName: hello-lambda
  HelloLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Ref  DeploymentBucket
        S3Key: demo/hello.zip
      FunctionName: hello
      Handler: hello.index
      MemorySize: 1024
      Role: !GetAtt
        - IamRoleLambdaExecution
        - Arn
      Runtime: nodejs6.10
      Timeout: 6
      Environment:
        Variables:
          SAY_HELLO_TO: erbody
    DependsOn:
      - HelloLogGroup
      - IamRoleLambdaExecution
